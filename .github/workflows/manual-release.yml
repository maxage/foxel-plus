name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      prerelease:
        description: 'Mark as prerelease'
        required: false
        default: false
        type: boolean

jobs:
  manual-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: Build all plugins
      run: |
        echo "🔨 Building all plugins..."
        for plugin in foxel-*/; do
          if [ -f "$plugin/package.json" ]; then
            echo "Building $plugin..."
            cd "$plugin"
            npm ci
            npm run build
            if [ -f "dist/plugin.js" ]; then
              echo "✅ Successfully built $plugin"
              echo "📊 File size: $(du -h dist/plugin.js | cut -f1)"
            else
              echo "❌ Build failed for $plugin"
              exit 1
            fi
            cd ..
          fi
        done
        
    - name: Create release files
      run: |
        echo "📦 Creating release files..."
        mkdir -p release
        
        # Copy plugin files
        for plugin in foxel-*/; do
          if [ -f "$plugin/dist/plugin.js" ]; then
            plugin_name=$(basename "$plugin")
            cp "$plugin/dist/plugin.js" "release/${plugin_name}.js"
            echo "✅ Packaged $plugin_name"
          fi
        done
        
        # Create release notes
        cat > release/RELEASE_NOTES.md << 'EOF'
        # 🎉 Foxel Plus 发布说明
        
        ## 📦 包含的插件
        
        EOF
        
        # Add plugin info to release notes
        for plugin in foxel-*/; do
          if [ -f "$plugin/package.json" ]; then
            plugin_name=$(basename "$plugin")
            plugin_version=$(grep '"version"' "$plugin/package.json" | cut -d'"' -f4)
            plugin_desc=$(grep '"description"' "$plugin/package.json" | cut -d'"' -f4)
            file_size=$(du -h "release/${plugin_name}.js" | cut -f1)
            
            echo "### 🖼️ ${plugin_name} (v${plugin_version})" >> release/RELEASE_NOTES.md
            echo "" >> release/RELEASE_NOTES.md
            echo "**描述**: ${plugin_desc}" >> release/RELEASE_NOTES.md
            echo "**文件大小**: ${file_size}" >> release/RELEASE_NOTES.md
            echo "**支持格式**: JPG, PNG, GIF, BMP, WebP, SVG, ICO, TIFF" >> release/RELEASE_NOTES.md
            echo "" >> release/RELEASE_NOTES.md
            echo "#### 主要功能" >> release/RELEASE_NOTES.md
            echo "- 🔍 智能缩放（10%-500%）" >> release/RELEASE_NOTES.md
            echo "- 🖱️ 拖拽移动" >> release/RELEASE_NOTES.md
            echo "- 🎛️ 工具栏控制" >> release/RELEASE_NOTES.md
            echo "- 🌙 深色主题" >> release/RELEASE_NOTES.md
            echo "- 📱 响应式设计" >> release/RELEASE_NOTES.md
            echo "" >> release/RELEASE_NOTES.md
            echo "#### 安装方法" >> release/RELEASE_NOTES.md
            echo "1. 下载 \`${plugin_name}.js\` 文件" >> release/RELEASE_NOTES.md
            echo "2. 将文件复制到 Foxel 的 \`web/public/plugins/\` 目录" >> release/RELEASE_NOTES.md
            echo "3. 在 Foxel 的"应用"页面安装插件" >> release/RELEASE_NOTES.md
            echo "4. 选择对应文件类型即可使用" >> release/RELEASE_NOTES.md
            echo "" >> release/RELEASE_NOTES.md
          fi
        done
        
        echo "📋 Release files created:"
        ls -la release/
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ inputs.version }}
        name: Foxel Plus ${{ inputs.version }}
        files: |
          release/*.js
          release/RELEASE_NOTES.md
        body_path: release/RELEASE_NOTES.md
        generate_release_notes: true
        draft: false
        prerelease: ${{ inputs.prerelease }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
