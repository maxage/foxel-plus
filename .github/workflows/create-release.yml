name: Manual Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., v1.0.0)'
        required: true
        default: 'v1.0.0'
      prerelease:
        description: 'Mark as prerelease'
        required: false
        default: false
        type: boolean

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Update plugin version
      run: |
        echo "📦 Updating plugin version to ${{ inputs.version }}"
        
        # 提取版本号（去掉 v 前缀）
        VERSION="${{ inputs.version }}"
        if [[ $VERSION == v* ]]; then
          VERSION=${VERSION#v}
        fi
        
        echo "📝 Version: $VERSION"
        
        # 更新所有插件的 package.json
        for plugin_dir in foxel-*/; do
          if [ -d "$plugin_dir" ] && [ -f "$plugin_dir/package.json" ]; then
            echo "🔄 Updating $plugin_dir package.json"
            cd "$plugin_dir"
            
            # 使用 npm version 命令更新版本号
            npm version "$VERSION" --no-git-tag-version
            
            echo "✅ Updated $plugin_dir to version $VERSION"
            cd ..
          fi
        done
        
    - name: Build plugin
      run: |
        cd foxel-image-viewer
        npm ci
        npm run build
        
    - name: Prepare release files
      run: |
        mkdir -p release
        cp foxel-image-viewer/dist/plugin.js release/foxel-image-viewer.js
        
        # 获取实际版本号和文件大小
        VERSION="${{ inputs.version }}"
        if [[ $VERSION == v* ]]; then
          VERSION=${VERSION#v}
        fi
        
        FILE_SIZE=$(du -h release/foxel-image-viewer.js | cut -f1)
        
        # 获取插件信息
        PLUGIN_NAME=$(cd foxel-image-viewer && node -p "require('./package.json').name")
        PLUGIN_DESCRIPTION=$(cd foxel-image-viewer && node -p "require('./package.json').description")
        PLUGIN_AUTHOR=$(cd foxel-image-viewer && node -p "require('./package.json').author")
        
        # Create release notes
        cat > release/RELEASE_NOTES.md << EOF
        # 🎉 Foxel Plus 发布说明
        
        ## 📦 包含的插件
        
        ### 🖼️ $PLUGIN_NAME (v$VERSION)
        
        **描述**: $PLUGIN_DESCRIPTION  
        **作者**: $PLUGIN_AUTHOR  
        **文件大小**: $FILE_SIZE  
        **支持格式**: JPG, PNG, GIF, BMP, WebP, SVG, ICO, TIFF
        
        #### 主要功能
        - 🔍 智能缩放（10%-500%）
        - 🖱️ 拖拽移动
        - 🔄 旋转和翻转
        - ⤢ 全屏模式
        - ℹ️ 图片信息显示
        - ⌨️ 键盘快捷键支持
        - 🎛️ 智能工具栏
        - 🌙 深色主题
        - 📱 响应式设计
        
        #### 安装方法
        1. 下载 \`foxel-image-viewer.js\` 文件
        2. 将文件复制到 Foxel 的 \`web/public/plugins/\` 目录
        3. 在 Foxel 的"应用"页面安装插件
        4. 选择对应文件类型即可使用
        
        #### 技术特性
        - **完全自包含** - 单文件输出，无外部依赖
        - **类型安全** - 基于 TypeScript 开发
        - **现代化 UI** - 使用 React 18 构建
        - **高性能** - ESBuild 优化构建
        - **即插即用** - 符合 Foxel 插件规范
        
        #### 更新日志
        - 版本 $VERSION 更新
        - 优化了全屏和非全屏模式的布局
        - 改进了工具栏的响应式设计
        - 增强了键盘快捷键支持
        - 修复了文本挤压问题
        EOF
        
        echo "📋 Release files prepared:"
        ls -la release/
        
    - name: Create GitHub Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ inputs.version }}
        name: Foxel Image Viewer ${{ inputs.version }}
        files: |
          release/foxel-image-viewer.js
          release/RELEASE_NOTES.md
        body_path: release/RELEASE_NOTES.md
        draft: false
        prerelease: ${{ inputs.prerelease }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
