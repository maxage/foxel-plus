name: Auto Release Plugin

on:
  push:
    paths:
      - 'foxel-*/**'
    branches:
      - main
  workflow_dispatch:

jobs:
  auto-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0 # Required for diffing
        
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        
    - name: Detect changed plugins
      id: detect-plugins
      run: |
        echo "üîç Detecting changed plugins..."
        # Use git diff to find changed directories starting with 'foxel-'
        CHANGED_DIRS=$(git diff --name-only HEAD~1 HEAD | grep '^foxel-.*/' | xargs -n 1 dirname | sort -u)
        
        if [ -z "$CHANGED_DIRS" ]; then
          echo "No plugin changes detected in directories."
          echo "changed=false" >> $GITHUB_OUTPUT
        else
          echo "üì¶ Changed plugin directories found: $CHANGED_DIRS"
          # Convert list of directories to a space-separated string for the output
          PLUGINS_STRING=$(echo $CHANGED_DIRS | tr '\n' ' ')
          echo "changed=true" >> $GITHUB_OUTPUT
          echo "plugins=${PLUGINS_STRING}" >> $GITHUB_OUTPUT
        fi
        
    - name: Process and Release Changed Plugins
      if: steps.detect-plugins.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"

        for plugin_dir in ${{ steps.detect-plugins.outputs.plugins }}; do
          if [ -d "$plugin_dir" ] && [ -f "$plugin_dir/package.json" ]; then
            echo "--- Processing plugin: $plugin_dir ---"
            cd "$plugin_dir"

            # Bump version using npm version patch
            # The -m flag creates a version commit and an annotated tag
            npm version patch -m "chore(release): release %s"
            
            # Get the new version from package.json
            NEW_VERSION=$(node -p "require('./package.json').version")
            TAG_NAME="$plugin_dir-v$NEW_VERSION"
            echo "üöÄ New version for $plugin_dir is $NEW_VERSION"
            echo "üè∑ Corresponding tag will be $TAG_NAME"

            # Build the plugin
            echo "üî® Building plugin..."
            npm ci
            npm run build
            
            # Create the GitHub Release
            echo "üì¶ Creating GitHub Release for $TAG_NAME..."
            gh release create "$TAG_NAME" \
              --title "$plugin_dir v$NEW_VERSION" \
              --notes "Automated release for $plugin_dir version $NEW_VERSION." \
              "dist/plugin.js"

            cd ..
            echo "‚úÖ Successfully processed and released $plugin_dir."
          fi
        done

        # Push all version bumps and tags at once after the loop
        echo "‚¨ÜÔ∏è Pushing all version changes and tags to the repository..."
        git push --follow-tags
        echo "üéâ All changed plugins have been successfully released."
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
